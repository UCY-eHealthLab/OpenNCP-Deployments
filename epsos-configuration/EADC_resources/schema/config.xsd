<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by a (a) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
           attributeFormDefault="unqualified">
    <xs:include schemaLocation="configMainTableColumns.xsd"/>
    <xs:include schemaLocation="configChildTableColumns.xsd"/>
    <!-- root node declaration -->
    <xs:element name="root" type="ComplexType_RootNode">
        <xs:unique name="matchXPathUniqueness">
            <xs:annotation>
                <xs:documentation>Every extractionRule is transformed into an XSLT template and therefore its matchXPath
                    attribute must be globally unique
                </xs:documentation>
            </xs:annotation>
            <xs:selector xpath=".//extractionRule"/>
            <xs:field xpath="@matchXPath"/>
        </xs:unique>
    </xs:element>
    <!-- root node definition -->
    <xs:complexType name="ComplexType_RootNode">
        <xs:sequence>
            <xs:element name="mainTable" type="ComplexType_MainTable">
                <xs:annotation>
                    <xs:documentation>Configuration for Meta-Data-related extractionRules</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="childTable" type="ComplexType_ChildTable">
                <xs:annotation>
                    <xs:documentation>Configuration for CDA-related extractionRules</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attributeGroup ref="AttributeGroup_Root">
            <xs:annotation>
                <xs:documentation>These attributes can be used to override the default-settings</xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>
    <!-- RootNode attributes -->
    <xs:attributeGroup name="AttributeGroup_Root">
        <xs:attribute name="statementDelimiterCharacter" use="optional">
            <xs:annotation>
                <xs:documentation>Delimiter-Character for terminating SQL-statements</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value=";"/>
                        </xs:restriction>
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="xs:string"/>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="insertNewlinesAfterSqlStatements" type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>If set to true, a newline/carriage-return is appended after every SQL-statement
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="columnDelimiterCharacter" use="optional">
            <xs:annotation>
                <xs:documentation>Character used to separate columns in SQL statements</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value=","/>
                        </xs:restriction>
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="char"/>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="insertNewlinesAfterSqlColumns" type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>If set to true, a newline/carriage-return is appended after every column in
                    SQL-statements
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="quoteCharacterForValues" use="optional">
            <xs:annotation>
                <xs:documentation>The quote-character used to escape values in SQL-statements</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="'"/>
                        </xs:restriction>
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="char"/>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    <!-- Character Declaration -->
    <xs:simpleType name="char">
        <xs:restriction base="xs:string">
            <xs:length value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- -->
    <!-- MainTableRules Definition -->
    <xs:complexType name="ComplexType_MainTable">
        <xs:group ref="Group_MainTable_Rules" maxOccurs="unbounded"/>
        <xs:attribute name="tableName" use="required">
            <xs:annotation>
                <xs:documentation>The SQL table name</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- ChildTableRules Definition -->
    <xs:complexType name="ComplexType_ChildTable">
        <xs:group ref="Group_ChildTable_Rules" minOccurs="0" maxOccurs="unbounded"/>
        <xs:attribute name="tableName" use="required">
            <xs:annotation>
                <xs:documentation>The SQL table name</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- -->
    <xs:group name="Group_MainTable_Rules">
        <xs:sequence>
            <xs:element name="extractionRule" type="ComplexType_MainTable_ExtractionRule">
                <xs:annotation>
                    <xs:documentation>A rule to select content from the metadata and write a db-record for each match
                        found.
                    </xs:documentation>
                </xs:annotation>
                <xs:unique name="mainTableTargetColumnUniqueness">
                    <xs:annotation>
                        <xs:documentation>A column must not occur more than once within the same SQL insert statement.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:selector xpath="./mapping"/>
                    <xs:field xpath="@targetColumn"/>
                </xs:unique>

            </xs:element>
        </xs:sequence>
    </xs:group>
    <xs:group name="Group_ChildTable_Rules">
        <xs:choice>
            <xs:element name="group">
                <xs:annotation>
                    <xs:documentation>Enables grouping of extraction rules for specific CDA class codes
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="control">
                            <xs:annotation>
                                <xs:documentation>Selects to which CDA class codes this group is applied
                                </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:choice>
                                    <xs:annotation>
                                        <xs:documentation>"skip" has higher priority than "use". If neither "skip" nor
                                            "use" is provided, all CDA class codes match
                                        </xs:documentation>
                                    </xs:annotation>
                                    <xs:element name="skip" type="ComplexType_Condition" minOccurs="0">
                                        <xs:annotation>
                                            <xs:documentation>Exclude this group for all CDA class codes listed here
                                            </xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                    <xs:element name="use" type="ComplexType_Condition" minOccurs="0">
                                        <xs:annotation>
                                            <xs:documentation>Include this group for all CDA class codes listed here
                                            </xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                </xs:choice>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="content">
                            <xs:annotation>
                                <xs:documentation>Container for ExtractionRules and SubGroups.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:group ref="Group_ChildTable_Rules" maxOccurs="unbounded"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="label" use="optional">
                        <xs:annotation>
                            <xs:documentation>Convenience-attribute for documentation purpose only</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <!-- -->
            <xs:element name="extractionRule" type="ComplexType_ChildTable_ExtractionRule">
                <xs:annotation>
                    <xs:documentation>A rule to select content from the appended CDA-document and write a db-record for
                        each match found
                    </xs:documentation>
                </xs:annotation>
                <xs:unique name="childTableTargetColumnUniqueness">
                    <xs:annotation>
                        <xs:documentation>A column must not occur more than once within the same SQL insert statement.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:selector xpath="./mapping"/>
                    <xs:field xpath="@targetColumn"/>
                </xs:unique>
            </xs:element>
        </xs:choice>
    </xs:group>
    <!-- -->
    <xs:complexType name="ComplexType_Condition">
        <xs:sequence>
            <xs:element name="code" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>A comparison criteria to filter CDA documents by class code</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="code" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:pattern value="[^\s]+"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="codeSystem" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:pattern value="[^\s]+"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <!-- MainTableExtractionRule -->
    <xs:complexType name="ComplexType_MainTable_ExtractionRule">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="mapping">
                <xs:annotation>
                    <xs:documentation>Assignment to map a specific value to a table column.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="targetColumn" type="SimpleType_MainTable_ExtractionColumnName" use="required">
                        <xs:annotation>
                            <xs:documentation>SQL table column</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="sourceXPath" type="anyXPathExpression" use="required">
                        <xs:annotation>
                            <xs:documentation>XPath expression to extract a value. Context is always the current match
                                of the extractionRule. If a result is an intersite link, it is resolved to its value.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="matchXPath" type="absoluteXPathExpression" use="required">
            <xs:annotation>
                <xs:documentation>The extractioRule is applied for each match of this XPath expression.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- ChildTableExtractionRule -->
    <xs:complexType name="ComplexType_ChildTable_ExtractionRule">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="mapping">
                <xs:annotation>
                    <xs:documentation>Assignment to map a specific value to a table-column.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="targetColumn" type="SimpleType_ChildTable_ExtractionColumnName" use="required">
                        <xs:annotation>
                            <xs:documentation>SQL table column</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="sourceXPath" type="anyXPathExpression" use="required">
                        <xs:annotation>
                            <xs:documentation>XPath expression to extract a value. Context is always the current match
                                of the extractionRule. If a result is an intersite link, it is resolved to its value.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="matchXPath" type="absoluteXPathExpression" use="required">
            <xs:annotation>
                <xs:documentation>The extractioRule is applied for each match of this XPath expression.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="ComplexType_CommonMapping">
        <xs:attribute name="sourceXPath" type="anyXPathExpression">
            <xs:annotation>
                <xs:documentation>The provided xpath is being evaluated within the context of a matched
                    extraction-rule's result-node. If the resulting value starts with # it is being treated as Link and
                    the targeted Value is used instead.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <!-- Attribute_Common_ExtractionRuleMappingSourceXPath -->
    </xs:complexType>
    <!-- -->
    <xs:simpleType name="absoluteXPathExpression">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="startsWithSlash">
                    <xs:minLength value="1"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="startsWithSlash">
                    <xs:enumeration value="/proxy:Transaction/proxy:TransactionInfo"/>
                    <xs:enumeration value="/proxy:Transaction/cda:ClinicalDocument"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="startsWithSlash">
        <xs:restriction base="xs:string">
            <xs:pattern value="/.*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="anyXPathExpression">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:minLength value="1"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="."/>
                    <xs:enumeration value="@code"/>
                    <xs:enumeration value="@codeSystem"/>
                    <xs:enumeration value="@codeSystemName"/>
                    <xs:enumeration value="@displayName"/>
                    <xs:enumeration value="/proxy:Transaction/cda:ClinicalDocument"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
</xs:schema>

<?xml version="1.0" encoding="UTF-8"?>
<RetrieveDocumentSetResponse xmlns="urn:ihe:iti:xds-b:2007">
   <RegistryResponse xmlns="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0"
                     status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success">
      <RegistryErrorList>
         <a:RegistryError xmlns:a="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0"
                          codeContext="CodeSystem name doesn't match provided name [ISCO != null]"
                          errorCode="2508"
                          location="urn:oid:1.3.182.2.12.10000734.6.1"
                          severity="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Warning">ECDATransformationHandler.Error.toEpSOSPivot(2508 / CodeSystem name doesn't match provided name [ISCO != null])</a:RegistryError>
      </RegistryErrorList>
   </RegistryResponse>
   <DocumentResponse>
      <HomeCommunityId>urn:oid:1.3.182.2.12.10000734.6.1</HomeCommunityId>
      <RepositoryUniqueId>1.3.182.2.4.6.2.1</RepositoryUniqueId>
      <DocumentUniqueId>E54AA8BF-2279-4604-B614-8CACCCB3A35B^XML-11</DocumentUniqueId>
      <mimeType>text/xml</mimeType>
      <Document></Document>
   </DocumentResponse>
</RetrieveDocumentSetResponse>
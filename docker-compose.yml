version: "3.9"
services:

  mysql:
    container_name: db
    env_file: .env
    image: mysql:5.7
    ports:
      - "${MYSQL_EXPOSED_PORT}:${MYSQL_PORT}"
    environment:
        MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_USER: ${MYSQL_USERNAME}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/startup-scripts:/docker-entrypoint-initdb.d:ro
      - ./mysql/custom.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - ./logs/mysql:/var/log/mysql
    restart: on-failure
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', '${MYSQL_ROOT_USER}', '-p${MYSQL_ROOT_PASSWORD}']
      timeout: 20s
      retries: 10
    networks:
      - openncp

  # OpenNCP Configuration Utility (Must run once to initialize the configurations)
  # In case it was already run, you can comment it out (it does not change anything after the first run)
  openncp-configuration-utility:
    env_file: .env
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    build:
      context: ./openncp-configuration-utility
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./openncp-configuration-utility:/usr/local/openncp-configuration-utility
    restart: "no"
    networks:
      - openncp

  # OpenNCP Server (Node A)
  openncp-server:
    container_name: openncp-server
    build:
      context: ./openncp-server
      dockerfile: Dockerfile
    # image: openncp-server:6.5.0-SNAPSHOT
    ports:
      - "6080:6080"
      - "6443:6443"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      EPSOS_PROPS_PATH: ${EPSOS_PROPS_PATH}
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/epsos-configuration/ATNA_resources/openatna.properties
        -Dfile.encoding=UTF-8"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/epsos-configuration/ATNA_resources/openatna.properties
        -Dfile.encoding=UTF-8
        -Dmysql_host=${MYSQL_HOST}
        -Dmysql_port=${MYSQL_PORT}
        -Dmysql_username=${MYSQL_USERNAME}
        -Dmysql_password=${MYSQL_PASSWORD}
        -Dtls_key_alias=${TLS_KEY_ALIAS}
        -Dtls_keystore_pwd=${TLS_KEYSTORE_PWD}
        -Dtls_keystore_path=${TLS_KEYSTORE_PATH}
        -Dtls_truststore_pwd=${TLS_TRUSTSTORE_PWD}
        -Dtls_truststore_path=${TLS_TRUSTSTORE_PATH}"
      LOGGING_LEVEL_ROOT: DEBUG

    volumes:
      - ./epsos-configuration:/opt/epsos-configuration
      - ./logs/openncp-server:/usr/local/tomcat/logs
      - ./openncp-configuration/certs:/usr/local/tomcat/opt/openncp-configuration/certs
    networks:
      - openncp

  # OpenNCP Server (Node B)
  # Client connector
  openncp-client:
    container_name: openncp-client
    build:
      context: ./openncp-client
      dockerfile: Dockerfile
    # image: openncp-client:${OPENNCP_VERSION}
    ports:
      - "7080:7080"
      - "7443:7443"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      EPSOS_PROPS_PATH: ${EPSOS_PROPS_PATH}
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/epsos-configuration/ATNA_resources/openatna.properties
        -Dfile.encoding=UTF-8"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/epsos-configuration/ATNA_resources/openatna.properties
        -Dfile.encoding=UTF-8
        -Dmysql_host=${MYSQL_HOST}
        -Dmysql_port=${MYSQL_PORT}
        -Dmysql_username=${MYSQL_USERNAME}
        -Dmysql_password=${MYSQL_PASSWORD}
        -Dtls_key_alias=${TLS_KEY_ALIAS}
        -Dtls_keystore_pwd=${TLS_KEYSTORE_PWD}
        -Dtls_keystore_path=${TLS_KEYSTORE_PATH}
        -Dtls_truststore_pwd=${TLS_TRUSTSTORE_PWD}
        -Dtls_truststore_path=${TLS_TRUSTSTORE_PATH}"
      LOGGING_LEVEL_ROOT: DEBUG
    volumes:
      - ./epsos-configuration:/opt/epsos-configuration
      - ./logs/openncp-client:/usr/local/tomcat/logs
      - ./openncp-configuration/certs:/usr/local/tomcat/opt/openncp-configuration/certs
    networks:
      - openncp

  # OpenNCP Backend Portal (Node B)
  # Portal Backend
  ehealth-portal-backend:
    container_name: ehealth-portal-backend
    build:
      context: ./ehealth-portal-backend
      dockerfile: Dockerfile
    # image: ehealth-portal-backend:${OPENNCP_VERSION}
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      EPSOS_PROPS_PATH: ${EPSOS_PROPS_PATH}
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/epsos-configuration/ATNA_resources/openatna.properties
        -Dfile.encoding=UTF-8"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/epsos-configuration/ATNA_resources/openatna.properties
        -Dfile.encoding=UTF-8
        -Dmysql_host=${MYSQL_HOST}
        -Dmysql_port=${MYSQL_PORT}
        -Dmysql_username=${MYSQL_USERNAME}
        -Dmysql_password=${MYSQL_PASSWORD}
        -Dtls_key_alias=${TLS_KEY_ALIAS}
        -Dtls_keystore_pwd=${TLS_KEYSTORE_PWD}
        -Dtls_keystore_path=${TLS_KEYSTORE_PATH}
        -Dtls_truststore_pwd=${TLS_TRUSTSTORE_PWD}
        -Dtls_truststore_path=${TLS_TRUSTSTORE_PATH}"
      LOGGING_LEVEL_ROOT: DEBUG
    volumes:
      - ./epsos-configuration:/opt/epsos-configuration
      - ./logs/ehealth-portal-backend:/usr/local/tomcat/logs
      - ./openncp-configuration/certs:/usr/local/tomcat/opt/openncp-configuration/certs
    networks:
      - openncp

  # # OpenNCP Frontend Portal (Node B)
  # # Portal Frontend
  ehealth-portal-frontend:
    container_name: ehealth-portal-frontend
    build:
      context: ./ehealth-portal-frontend
      dockerfile: Dockerfile
    # image: ehealth-portal-frontend:${OPENNCP_VERSION}
    ports:
      - "9080:9080"
      - "9443:9443"
    depends_on:
      - ehealth-portal-backend
    environment:
      JAVA_OPTS: "
        -Dtls_key_alias=${TLS_KEY_ALIAS}
        -Dtls_keystore_pwd=${TLS_KEYSTORE_PWD}
        -Dtls_keystore_path=${TLS_KEYSTORE_PATH}
        -Dtls_truststore_pwd=${TLS_TRUSTSTORE_PWD}
        -Dtls_truststore_path=${TLS_TRUSTSTORE_PATH}"
      LOGGING_LEVEL_ROOT: DEBUG
    volumes:
      - ./logs/ehealth-portal-frontend:/usr/local/tomcat/logs
      - ./openncp-configuration/certs:/usr/local/tomcat/opt/openncp-configuration/certs
    networks:
      - openncp

  # # OpenNCP Backend Gateway (Officer)
  # openncp-gateway-backend:
  #   container_name: openncp-gateway-backend
  #   image: openncp-gateway-backend:5.2.5
  #   ports:
  #     - "8082:8080"
  #     - "8445:8443"
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   environment:
  #     EPSOS_PROPS_PATH: "/opt/epsos-configuration/"
  #     CATALINA_OPTS: "$CATALINA_OPTS -DopenATNA.properties.path=file:/opt/epsos-configuration/ATNA_resources/openatna.properties -Dfile.encoding=UTF-8"
  #     JAVA_OPTS: "-DopenATNA.properties.path=file:/opt/epsos-configuration/ATNA_resources/openatna.properties -Dfile.encoding=UTF-8 -Dmysql_host=${MYSQL_HOST} -Dmysql_port=${MYSQL_PORT} -Dmysql_username=${MYSQL_USERNAME} -Dmysql_password=${MYSQL_PASSWORD}"
  #     #https://stackoverflow.com/questions/13956651/externalizing-tomcat-webapp-config-from-war-file
  #     #
  #     LOGGING_LEVEL_ROOT: DEBUG
  #   volumes:
  #     - ./epsos-configuration:/opt/epsos-configuration
  #     - ./logs/openncp-gateway-backend:/usr/local/tomcat/logs
  #     - ./tomcat-configuration/openncp-gateway-backend/tomcat-config:/usr/local/tomcat/conf/Catalina/localhost
  #     - ./tomcat-configuration/openncp-gateway-backend/opt/openncp-gateway-backend-config:/opt/tomcat-configuration
  #   networks:
  #     - openncp

  # openncp-gateway-frontend:
  #   container_name: openncp-gateway-frontend
  #   image: docker.io/library/openncp-gateway-frontend:latest
  #   ports:
  #     - "8083:80"
  #     - "8446:443"
  #   depends_on:
  #     - openncp-gateway-backend
  #   networks:
  #     - openncp

  # # OpenNCP TRC-STS (Officer)

  # # OpenNCP OpenATNA (Officer)

volumes:
  persistent:
  mysql-data:
  portainer-data:

networks:
  openncp:
    external: false
    name: openncp
